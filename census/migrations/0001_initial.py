# Generated by Django 5.1.7 on 2025-05-15 20:53

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("location", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Denomination",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("denomination_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("family_census", models.CharField(max_length=255)),
                ("family_arda", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CensusSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource_id",
                    models.IntegerField(unique=True, verbose_name="Record ID"),
                ),
                ("schedule_title", models.CharField(max_length=255)),
                (
                    "schedule_id",
                    models.CharField(max_length=50, verbose_name="Schedule ID"),
                ),
                ("box", models.CharField(blank=True, max_length=255, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "datascribe_omeka_item_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Omeka Item ID",
                    ),
                ),
                (
                    "datascribe_item_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Item ID",
                    ),
                ),
                (
                    "datascribe_record_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Record ID",
                    ),
                ),
                (
                    "datascribe_original_image_path",
                    models.CharField(
                        max_length=255, verbose_name="DataScribe Original Image Path"
                    ),
                ),
                (
                    "omeka_storage_id",
                    models.CharField(max_length=255, verbose_name="Omeka Storage ID"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["schedule_id"], name="census_cens_schedul_9fec28_idx"
                    ),
                    models.Index(
                        fields=["datascribe_omeka_item_id"],
                        name="census_cens_datascr_d4a606_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Clergy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                    ),
                ),
                ("is_assistant", models.BooleanField(default=False)),
                (
                    "college",
                    models.CharField(
                        blank=True,
                        help_text="The college attended by the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "theological_seminary",
                    models.CharField(
                        blank=True,
                        help_text="The theological seminary attended by the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "num_other_churches_served",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Number of other churches served",
                    ),
                ),
                (
                    "serving_congregation",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether the pastor is serving the congregation. Leave blank if information is missing or illegible.",
                        null=True,
                        verbose_name="Pastor serving congregation",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "census_schedule",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clergy",
                        to="census.censusschedule",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Clergy",
            },
        ),
        migrations.CreateModel(
            name="HistoricalCensusSchedule",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "resource_id",
                    models.IntegerField(db_index=True, verbose_name="Record ID"),
                ),
                ("schedule_title", models.CharField(max_length=255)),
                (
                    "schedule_id",
                    models.CharField(max_length=50, verbose_name="Schedule ID"),
                ),
                ("box", models.CharField(blank=True, max_length=255, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "datascribe_omeka_item_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Omeka Item ID",
                    ),
                ),
                (
                    "datascribe_item_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Item ID",
                    ),
                ),
                (
                    "datascribe_record_id",
                    models.IntegerField(
                        help_text="This record is read-only and not editable.",
                        verbose_name="DataScribe Record ID",
                    ),
                ),
                (
                    "datascribe_original_image_path",
                    models.CharField(
                        max_length=255, verbose_name="DataScribe Original Image Path"
                    ),
                ),
                (
                    "omeka_storage_id",
                    models.CharField(max_length=255, verbose_name="Omeka Storage ID"),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical census schedule",
                "verbose_name_plural": "historical census schedules",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClergy",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                    ),
                ),
                ("is_assistant", models.BooleanField(default=False)),
                (
                    "college",
                    models.CharField(
                        blank=True,
                        help_text="The college attended by the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "theological_seminary",
                    models.CharField(
                        blank=True,
                        help_text="The theological seminary attended by the clergy person. Leave blank if information is missing or illegible.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "num_other_churches_served",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Number of other churches served",
                    ),
                ),
                (
                    "serving_congregation",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether the pastor is serving the congregation. Leave blank if information is missing or illegible.",
                        null=True,
                        verbose_name="Pastor serving congregation",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "census_schedule",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="census.censusschedule",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical clergy",
                "verbose_name_plural": "historical Clergy",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDenomination",
            fields=[
                ("id", models.IntegerField(blank=True, db_index=True)),
                ("denomination_id", models.CharField(db_index=True, max_length=50)),
                ("name", models.CharField(max_length=255)),
                ("family_census", models.CharField(max_length=255)),
                ("family_arda", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical denomination",
                "verbose_name_plural": "historical denominations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReligiousBody",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the church as it appears in the census record.",
                        max_length=255,
                        null=True,
                        verbose_name="Local church name",
                    ),
                ),
                ("census_code", models.CharField(max_length=50)),
                ("division", models.CharField(max_length=100)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "urban_rural_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Urban/rural code",
                    ),
                ),
                (
                    "num_edifices",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Number of edifices",
                    ),
                ),
                (
                    "edifice_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Value of church edifices",
                    ),
                ),
                (
                    "edifice_debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Debt on church edifices",
                    ),
                ),
                (
                    "has_pastors_residence",
                    models.BooleanField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Ownership of pastor's residence",
                    ),
                ),
                (
                    "residence_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Value of pastor's residence",
                    ),
                ),
                (
                    "residence_debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Debt on pastor's residence",
                    ),
                ),
                (
                    "expenses",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Expenses",
                    ),
                ),
                (
                    "benevolences",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Benevolences",
                    ),
                ),
                (
                    "total_expenditures",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Total annual expenditures",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "census_record",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="census.censusschedule",
                    ),
                ),
                (
                    "denomination",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Select the denomination associated with this religious body.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="census.denomination",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Use the magnifying glass to the right to search for a location. Do not manually edit this number.",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="location.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Religious Body",
                "verbose_name_plural": "historical Religious Body",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ReligiousBody",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the church as it appears in the census record.",
                        max_length=255,
                        null=True,
                        verbose_name="Local church name",
                    ),
                ),
                ("census_code", models.CharField(max_length=50)),
                ("division", models.CharField(max_length=100)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "urban_rural_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Urban/rural code",
                    ),
                ),
                (
                    "num_edifices",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Number of edifices",
                    ),
                ),
                (
                    "edifice_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Value of church edifices",
                    ),
                ),
                (
                    "edifice_debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Debt on church edifices",
                    ),
                ),
                (
                    "has_pastors_residence",
                    models.BooleanField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Ownership of pastor's residence",
                    ),
                ),
                (
                    "residence_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Value of pastor's residence",
                    ),
                ),
                (
                    "residence_debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Debt on pastor's residence",
                    ),
                ),
                (
                    "expenses",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Expenses",
                    ),
                ),
                (
                    "benevolences",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Benevolences",
                    ),
                ),
                (
                    "total_expenditures",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Leave blank if information is missing or illegible",
                        max_digits=12,
                        null=True,
                        verbose_name="Total annual expenditures",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "census_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="church_details",
                        to="census.censusschedule",
                    ),
                ),
                (
                    "denomination",
                    models.ForeignKey(
                        help_text="Select the denomination associated with this religious body.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="census.denomination",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        help_text="Use the magnifying glass to the right to search for a location. Do not manually edit this number.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="location.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Religious Body",
                "verbose_name_plural": "Religious Body",
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "male_members",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Male Members",
                    ),
                ),
                (
                    "female_members",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Female Members",
                    ),
                ),
                (
                    "total_members_by_sex",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Total Members by Sex",
                    ),
                ),
                (
                    "members_under_13",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Members Under 13",
                    ),
                ),
                (
                    "members_13_and_older",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Members 13 and Older",
                    ),
                ),
                (
                    "total_members_by_age",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Total Members by Age",
                    ),
                ),
                (
                    "sunday_school_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Sunday Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "sunday_school_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Sunday Schools - Number of Scholars",
                    ),
                ),
                (
                    "vbs_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Vacation Bible Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "vbs_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Vacation Bible Schools - Number of Scholars",
                    ),
                ),
                (
                    "weekday_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Week-day Religious Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "weekday_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Week-day Religious Schools - Number of Scholars",
                    ),
                ),
                (
                    "parochial_num_administrators",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Administrators",
                    ),
                ),
                (
                    "parochial_num_elementary_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Elementary Teachers",
                    ),
                ),
                (
                    "parochial_num_secondary_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Secondary Teachers",
                    ),
                ),
                (
                    "parochial_num_elementary_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Elementary Scholars",
                    ),
                ),
                (
                    "parochial_num_secondary_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Secondary Scholars",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "census_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership_details",
                        to="census.censusschedule",
                    ),
                ),
                (
                    "religious_body",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership",
                        to="census.religiousbody",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membership",
                "verbose_name_plural": "Membership",
            },
        ),
        migrations.CreateModel(
            name="HistoricalMembership",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "male_members",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Male Members",
                    ),
                ),
                (
                    "female_members",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Female Members",
                    ),
                ),
                (
                    "total_members_by_sex",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Total Members by Sex",
                    ),
                ),
                (
                    "members_under_13",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Members Under 13",
                    ),
                ),
                (
                    "members_13_and_older",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Members 13 and Older",
                    ),
                ),
                (
                    "total_members_by_age",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Total Members by Age",
                    ),
                ),
                (
                    "sunday_school_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Sunday Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "sunday_school_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Sunday Schools - Number of Scholars",
                    ),
                ),
                (
                    "vbs_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Vacation Bible Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "vbs_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Vacation Bible Schools - Number of Scholars",
                    ),
                ),
                (
                    "weekday_num_officers_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Week-day Religious Schools - Number of Officers/Teachers",
                    ),
                ),
                (
                    "weekday_num_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Week-day Religious Schools - Number of Scholars",
                    ),
                ),
                (
                    "parochial_num_administrators",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Administrators",
                    ),
                ),
                (
                    "parochial_num_elementary_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Elementary Teachers",
                    ),
                ),
                (
                    "parochial_num_secondary_teachers",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Secondary Teachers",
                    ),
                ),
                (
                    "parochial_num_elementary_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Elementary Scholars",
                    ),
                ),
                (
                    "parochial_num_secondary_scholars",
                    models.IntegerField(
                        blank=True,
                        help_text="Leave blank if information is missing or illegible",
                        null=True,
                        verbose_name="Parochial Schools - Number of Secondary Scholars",
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "census_record",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="census.censusschedule",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "religious_body",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="census.religiousbody",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Membership",
                "verbose_name_plural": "historical Membership",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name="religiousbody",
            index=models.Index(
                fields=["denomination"], name="census_reli_denomin_652bc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="religiousbody",
            index=models.Index(
                fields=["location"], name="census_reli_locatio_f3c697_idx"
            ),
        ),
    ]
